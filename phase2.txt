actor Client
participant Server
participant Handler
participant Service
participant DataAccess
database db

entryspacing 0.9
group #navy Registration #white
Client -> Server: [POST] /user\n{"username":" ", "password":" ", "email":" "}
Server -> Handler: {"username":" ", "password":" ", "email":" "}
Handler -> Service: register(RegisterRequest)
Service -> DataAccess: getUser(username)
DataAccess -> db:Find UserData by username
DataAccess --> Service: null
Service -> DataAccess:createUser(userData)
DataAccess -> db:Add UserData
Service -> DataAccess:createAuth(authData)
DataAccess -> db:Add AuthData
Service --> Handler: RegisterResult
Handler --> Server: {"username" : " ", "authToken" : " "}
Server --> Client: 200\n{"username" : " ", "authToken" : " "}
end

group #orange Login #white
Client -> Server: [POST]/session\n{username,password}
Server -> Handler:  {username, password}
Handler -> Service: login(loginRequest)
Service -> DataAccess: getUser(username)
DataAccess -> db:Find UserData by username
DataAccess --> Service: userData
Service -> DataAccess:createAuth(authData)
DataAccess -> db:Add AuthData
Service --> Handler: LoginResult
Handler --> Server: {"username" : " ", "authToken" : " "}
Server --> Client: 200\n { "username":"", "authToken":"" }
end

group #green Logout #white
Client -> Server: [DELETE] /session\nauthToken
Server -> Handler:  authToken
Handler -> Service: logout(logoutRequest)
Service -> DataAccess: deleteAuth(authToken)
DataAccess -> db:Find authToken
DataAccess -> db: delete authToken (make invalid)
DataAccess --> Service: null
Service --> Handler: null
Handler --> Server: {}
Server --> Client: 200\n {}
end

group #red List Games #white
Client -> Server: [GET] /game\nauthToken
Server -> Handler:  authToken
Handler -> Service: listGames(gamesRequest)
Service -> DataAccess: listGame()
DataAccess -> db: retrieves every game
db --> DataAccess: everyGame
DataAccess --> Service: gamesArray
Service --> Handler: listResult
Handler --> Server: { "games": [{"gameID": 1234,\n "whiteUsername":"", "blackUsername":"", "gameName:""} ]}
Server -> Client: 200\n { "games": [{"gameID": 1234, "whiteUsername":"",\n "blackUsername":"", "gameName:""} ]}
end

group #purple Create Game #white
Client -> Server: [POST] /game\nauthToken\n{gameName}
Server -> Handler: {gameName}
Handler -> Service: newGame(gameRequest)
Service -> DataAccess: getGame(gameName)
DataAccess -> db: Find game by gameName
DataAccess --> Service: null
Service -> DataAccess:createGame(gameName)
DataAccess -> db:Add game
Service -> DataAccess:createGameID(gameName)
DataAccess -> db:Add gameID
Service --> Handler: newGameResult
Handler --> Server: { "gameID": 1234 }
Server --> Client: 	200\n { "gameID": 1234 }
end

group #yellow Join Game #black
Client -> Server: [PUT] /game\nauthToken\n{playerColor, gameID}
Server -> Handler: {gameName}
Handler -> Service: joinGame(joinRequest)
Service -> DataAccess: updateGame(playerColor, gameID)
DataAccess -> db: replace the game at the given ID\n with the updated game
DataAccess --> Service: null
Service --> Handler: null
Handler --> Server: {}
Server --> Client: 	200\n {}
end

group #gray Clear application #white
Client -> Server: [DELETE] /db
Server -> Handler: {}
Handler -> Service: clear()
Service -> DataAccess: clear()
DataAccess -> db: delete all models in db
DataAccess --> Service: null
Service --> Handler: null
Handler --> Server: {}
Server --> Client: 	200\n {}
end
